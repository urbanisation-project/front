
events {
    # Nginx worker_connections is nothing but the number of connections that 
    # simultaneously manage the worker process.
    worker_connections  4096;  ## Default: 1024
}
http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_disable "msie6";

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    server {
      
      listen 80;
      listen [::]:80;

      #server_name localhost;

      # access_log and error_log, we can access them through docker logs CONTAINER_ID
      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log;
      
      # location of the frontend as specifies in Dockerfile : COPY --from=node /app/dist/front /usr/share/nginx/html
      root /usr/share/nginx/html;

      # (default “/”) Nginx will try to serve static root folder (frontend).
      location / { 
          try_files $uri $uri/ /index.html;
          proxy_pass http://localhost:8080/;
          #fastcgi_pass http://localhost:8090;
      }

      # Nginx will pass requests beginning with “/api” and "login" and "signup" to the backend application.
      location /v1/api/ {
          proxy_pass http://localhost:8080/v1/api/;
      }
    }
}
